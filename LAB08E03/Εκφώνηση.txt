Lab08 E01 - 27/04/2020
----------------------------------------------------------------------------------------------------------------------
Περιγραφή:
Ο πίνακας T[0,…, n-1] έχει τιμές καθημερινού κέρδους/ζημίας της μετοχής εταιρίας για διαδοχικές ημέρες 0, …, n-1. 
Για κάθε υποδιάστημα i, …,j συνεχόμενων ημερών ορίζουμε ως S[i, j] το άθροισμα των αντίστοιχων θέσεων Τ[i,…,j] του 
πίνακα T. Το ζητούμενο είναι ο υπολογισμός του μεγαλύτερου αθροίσματος  κερδών/ζημιών S[i*, j*] για ένα βέλτιστο 
υποδιάστημα συνεχόμενων ημερών i*, …, j*. Ως ένα απλό παράδειγμα, αν θεωρήσουμε είσοδο με 6 συνεχόμενες ημέρες 0, …, 5  
με αντίστοιχες τιμές κερδών (θετικά)/ζημιών (αρνητικά) τις [-2, 11, -4, 13, -5, 2]= T[0,…, 5]. Το μεγαλύτερο άθροισμα 
τιμών σε συνεχόμενο υποδιάστημα ημερών είναι το 20 που προκύπτει από το άθροισμα των τιμών  [11, -4, 13]= S[1,3]. Με 
είσοδο από το πληκτρολόγιο το πλήθος n των ημερών και το πίνακα T[0,…, n-1] γράψτε κώδικα (C, C++) αλγόριθμου όπου:

A (1.5 μονάδες) ψάχνει εξαντλητικά (exhaustive search) όλα τα δυνατά υποδιαστήματα συνεχόμενων ημερών i,…, j για κάθε 
ζεύγος ημερών i≤j στο 0, …, n-1. Επιστρέφει τη τιμή του μεγαλύτερου αθροίσματος κερδών/ζημιών S[i*, j*] και το 
αντίστοιχο υποδιάστημα συνεχόμενων ημερών [i*, …, j*] που επιτεύχθηκε αυτό. Ποια είναι η ασυμπτωτική πολυπλοκότητα του 
αλγορίθμου σας (αιτιολογήστε); 
(Διαίρει και Βασίλευε σε αναδρομική εξίσωση)
Χρόνος Ο(n3).

Β (2 μονάδες) Βελτιώστε τον χρόνο του εξαντλητικού αλγόριθμο στο Α με δυναμικό προγραμματισμό, αποφεύγοντας να 
ξαναυπολογίστε εξαρχής ένα υποψήφιο  άθροισμα, αλλά να λάβετε υπόψη ήδη υπολογισμένο άθροισμα μικρότερου υποδιαστήματος.
Έτσι, αντί σε Θ(j-i) χρόνο να υπολογίσουμε εξ αρχής το άθροισμα S[i,j], σε Ο(1) χρόνο το υπολογίζουμε αν έχουμε 
αποθηκεύσει ήδη το S[i, j-1] (δλδ μικρότερο υποπρόβλημα) και του προσθέσουμε το Τ[j]  (όπου Τ είναι ο πίνακας εισόδου). 
Κάντε χρήση κατάλληλου πίνακα αποθήκευσης των επιμέρους αθροισμάτων των μικρότερων υποπροβλημάτων. Ποια είναι η 
βελτιωμένη  ασυμπτωτική πολυπλοκότητα του αλγορίθμου σας (αιτιολογήστε);
(Υπολογισμός μέγιστου αθροίσματος συνεχόμενης ακολοθίας με Διαιρει και βασίλευε, δυναμικό προγραμματισμό)
Χρόνος Ο(n2).

Γ  (4 μονάδες) Χρησιμοποιήστε τεχνική «διαίρει & βασίλευε». Σπάστε το αρχικό πρόβλημα T[0,…, n-1] σε 2 ίσα υποπροβλήματα 
T[0,…, (n-1)/2] και T[(n-1)/2+1,…, n-1]. Σκεφτείτε ότι η βέλτιστη λύση έχει 3 δυνατότητες: i) να ανήκει εξ ολοκλήρου στο  
αριστερό τμήμα T[0,…, (n-1)/2], ii) να ανήκει εξ ολοκλήρου στο δεξιό τμήμα T[(n-1)/2+1,…, n], και τέλος iii) να ανήκει 
το αρχικό μέρος της βέλτιστης λύσεως Τ[i*, …, (n-1)/2]  στο αριστερό τμήμα της αναδρομής ενώ το τελικό μέρος της 
βέλτιστης λύσεως Τ[(n-1)/2+1, …, j*] να ανήκει και στο δεξιό τμήμα. Δλδ, το βέλτιστο υποδιάστημα να ξεκινά από θέση i* 
στο αριστερό υποπρόβλημα, υποχρεωτικά διέρχεται από τα σημεία σπασίματος (n-1)/2 και (n-1)/2+1, και να τελειώνει σε 
θέση j* στο δεξιό υποπρόβλημα.   Στη περίπτωση iii) αιτιολογήστε ότι υπάρχει πολύ γρήγορος (γραμμικός) αλγόριθμος για 
την εύρεση του βέλτιστου αθροίσματος και χρησιμοποιήσετε τον ως υπορουτίνα για τον ζητούμενο «διαίρει & βασίλευε».  
Ποια είναι η βελτιωμένη  ασυμπτωτική πολυπλοκότητα του αλγορίθμου σας (αιτιολογήστε);
(Υπολογισμός μέγιστου αθροίσματος συνεχόμενης ακολουθίας με διαίρε και βασίλευε)
(nlog2n).